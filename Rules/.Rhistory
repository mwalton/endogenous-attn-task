source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/retinotopic-remapping/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="data_output.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("TRIAL_TYPE","PROBE_DELAY", "RULES"))
l = dim(data.summary)[1]
c = rep(410,l)
data.summary$wRT = c - data.summary$wRT
########## compute R2s
golomb_S = c(8, 21, 21)
golomb_I = c(8, 5, 13)
golomb_R = c(24, 15, 9.5)
epic_S = c(10, 60, 46)
epic_I = c(48.88632, 31.9, 33)
epic_R = c(78, 59, 43)
R_S = cor(golomb_S,epic_S)
R_I = cor(golomb_I,epic_I)
R_R = cor(golomb_R,epic_R)
Rsq_S = R_S*R_S
Rsq_I = R_I*R_I
Rsq_R = R_R*R_R
rlbl_S <- paste("R^2 == ", round(Rsq_S,4))
rlbl_I <- paste("R^2 == ", round(Rsq_I,4))
rlbl_R <- paste("R^2 == ", round(Rsq_R,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se),group=TRIAL_TYPE, colour=TRIAL_TYPE, y=wRT, x=PROBE_DELAY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 3, y = 80, label = rlbl_S, parse=TRUE, colour="blue") +
annotate("text", x = 3, y = 75, label = rlbl_I, parse=TRUE, colour="darkred") +
annotate("text", x = 3, y = 70, label = rlbl_R, parse=TRUE, colour="darkgreen") +
my.theme + labs(y=paste('RT ',modifier,'Difference (ms)',sep=""), x='Probe Delay (MS after saccade completion)') +
ggtitle(paste("  Attentional Facilitation by Probe Location (N=",N,")",sep="")) +
theme(legend.position = "right")
View(data.summary)
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/retinotopic-remapping/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="data_output.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("TRIAL_TYPE","PROBE_DELAY", "RULES"))
l = dim(data.summary)[1]
c = rep(410,l)
data.summary$wRT = c - data.summary$wRT
########## compute R2s
golomb_S = c(8, 21, 21)
golomb_I = c(8, 5, 13)
golomb_R = c(24, 15, 9.5)
epic_S = c(10, 60, 46)
epic_I = c(33.635838, 31.693449, 378.0808)
epic_R = c(78, 59, 43)
R_S = cor(golomb_S,epic_S)
R_I = cor(golomb_I,epic_I)
R_R = cor(golomb_R,epic_R)
Rsq_S = R_S*R_S
Rsq_I = R_I*R_I
Rsq_R = R_R*R_R
rlbl_S <- paste("R^2 == ", round(Rsq_S,4))
rlbl_I <- paste("R^2 == ", round(Rsq_I,4))
rlbl_R <- paste("R^2 == ", round(Rsq_R,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se),group=TRIAL_TYPE, colour=TRIAL_TYPE, y=wRT, x=PROBE_DELAY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 3, y = 80, label = rlbl_S, parse=TRUE, colour="blue") +
annotate("text", x = 3, y = 75, label = rlbl_I, parse=TRUE, colour="darkred") +
annotate("text", x = 3, y = 70, label = rlbl_R, parse=TRUE, colour="darkgreen") +
my.theme + labs(y=paste('RT ',modifier,'Difference (ms)',sep=""), x='Probe Delay (MS after saccade completion)') +
ggtitle(paste("  Attentional Facilitation by Probe Location (N=",N,")",sep="")) +
theme(legend.position = "right")
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/retinotopic-remapping/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="data_output.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("TRIAL_TYPE","PROBE_DELAY", "RULES"))
l = dim(data.summary)[1]
c = rep(410,l)
data.summary$wRT = c - data.summary$wRT
########## compute R2s
golomb_S = c(8, 21, 21)
golomb_I = c(8, 5, 13)
golomb_R = c(24, 15, 9.5)
epic_S = c(9.804074, 46.113835, 59.938499)
epic_I = c(33.635838, 31.693449, 378.0808)
epic_R = c(78.352804, 59.209275, 43.710729)
R_S = cor(golomb_S,epic_S)
R_I = cor(golomb_I,epic_I)
R_R = cor(golomb_R,epic_R)
Rsq_S = R_S*R_S
Rsq_I = R_I*R_I
Rsq_R = R_R*R_R
rlbl_S <- paste("R^2 == ", round(Rsq_S,4))
rlbl_I <- paste("R^2 == ", round(Rsq_I,4))
rlbl_R <- paste("R^2 == ", round(Rsq_R,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se),group=TRIAL_TYPE, colour=TRIAL_TYPE, y=wRT, x=PROBE_DELAY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 3, y = 80, label = rlbl_S, parse=TRUE, colour="blue") +
annotate("text", x = 3, y = 75, label = rlbl_I, parse=TRUE, colour="darkred") +
annotate("text", x = 3, y = 70, label = rlbl_R, parse=TRUE, colour="darkgreen") +
my.theme + labs(y=paste('RT ',modifier,'Difference (ms)',sep=""), x='Probe Delay (MS after saccade completion)') +
ggtitle(paste("  Attentional Facilitation by Probe Location (N=",N,")",sep="")) +
theme(legend.position = "right")
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/retinotopic-remapping/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="model1_data.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("TRIAL_TYPE","PROBE_DELAY", "RULES"))
l = dim(data.summary)[1]
c = rep(410,l)
data.summary$wRT = c - data.summary$wRT
########## compute R2s
golomb_S = c(8, 21, 21)
golomb_I = c(8, 5, 13)
golomb_R = c(24, 15, 9.5)
epic_S = c(9.804074, 46.113835, 59.938499)
epic_I = c(33.635838, 31.693449, 378.0808)
epic_R = c(78.352804, 59.209275, 43.710729)
R_S = cor(golomb_S,epic_S)
R_I = cor(golomb_I,epic_I)
R_R = cor(golomb_R,epic_R)
Rsq_S = R_S*R_S
Rsq_I = R_I*R_I
Rsq_R = R_R*R_R
rlbl_S <- paste("R^2 == ", round(Rsq_S,4))
rlbl_I <- paste("R^2 == ", round(Rsq_I,4))
rlbl_R <- paste("R^2 == ", round(Rsq_R,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se),group=TRIAL_TYPE, colour=TRIAL_TYPE, y=wRT, x=PROBE_DELAY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 3, y = 80, label = rlbl_S, parse=TRUE, colour="blue") +
annotate("text", x = 3, y = 75, label = rlbl_I, parse=TRUE, colour="darkred") +
annotate("text", x = 3, y = 70, label = rlbl_R, parse=TRUE, colour="darkgreen") +
my.theme + labs(y=paste('RT ',modifier,'Difference (ms)',sep=""), x='Probe Delay (MS after saccade completion)') +
ggtitle(paste("  Attentional Facilitation by Probe Location (N=",N,")",sep="")) +
theme(legend.position = "right")
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/retinotopic-remapping/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="model1_data.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("TRIAL_TYPE","PROBE_DELAY", "RULES"))
l = dim(data.summary)[1]
c = rep(410,l)
data.summary$wRT = c - data.summary$wRT
########## compute R2s
golomb_S = c(8, 21, 21)
golomb_I = c(8, 5, 13)
golomb_R = c(24, 15, 9.5)
epic_S = c(9.804074, 46.113835, 59.938499)
epic_I = c(33.635838, 31.693449, 378.0808)
epic_R = c(78.352804, 59.209275, 43.710729)
R_S = cor(golomb_S,epic_S)
R_I = cor(golomb_I,epic_I)
R_R = cor(golomb_R,epic_R)
Rsq_S = R_S*R_S
Rsq_I = R_I*R_I
Rsq_R = R_R*R_R
rlbl_S <- paste("R^2 == ", round(Rsq_S,4))
rlbl_I <- paste("R^2 == ", round(Rsq_I,4))
rlbl_R <- paste("R^2 == ", round(Rsq_R,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se),group=TRIAL_TYPE, colour=TRIAL_TYPE, y=wRT, x=PROBE_DELAY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 3, y = 80, label = rlbl_S, parse=TRUE, colour="blue") +
annotate("text", x = 3, y = 77, label = rlbl_I, parse=TRUE, colour="darkred") +
annotate("text", x = 3, y = 73, label = rlbl_R, parse=TRUE, colour="darkgreen") +
my.theme + labs(y=paste('RT ',modifier,'Difference (ms)',sep=""), x='Probe Delay (MS after saccade completion)') +
ggtitle(paste("  Attentional Facilitation by Probe Location (N=",N,")",sep="")) +
theme(legend.position = "right")
View(data.summary)
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/retinotopic-remapping/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="model1_data.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("TRIAL_TYPE","PROBE_DELAY", "RULES"))
l = dim(data.summary)[1]
c = rep(410,l)
data.summary$wRT = c - data.summary$wRT
########## compute R2s
golomb_S = c(8, 21, 21)
golomb_I = c(8, 5, 13)
golomb_R = c(24, 15, 9.5)
epic_S = c(24.05460, 27.11470, 27.32102)
epic_I = c(48.88632, 52.64638, 52.68568)
epic_R = c(72.63249, 69.56975, 68.64298)
R_S = cor(golomb_S,epic_S)
R_I = cor(golomb_I,epic_I)
R_R = cor(golomb_R,epic_R)
Rsq_S = R_S*R_S
Rsq_I = R_I*R_I
Rsq_R = R_R*R_R
rlbl_S <- paste("R^2 == ", round(Rsq_S,4))
rlbl_I <- paste("R^2 == ", round(Rsq_I,4))
rlbl_R <- paste("R^2 == ", round(Rsq_R,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se),group=TRIAL_TYPE, colour=TRIAL_TYPE, y=wRT, x=PROBE_DELAY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 3, y = 80, label = rlbl_S, parse=TRUE, colour="blue") +
annotate("text", x = 3, y = 77, label = rlbl_I, parse=TRUE, colour="darkred") +
annotate("text", x = 3, y = 74, label = rlbl_R, parse=TRUE, colour="darkgreen") +
my.theme + labs(y=paste('RT ',modifier,'Difference (ms)',sep=""), x='Probe Delay (MS after saccade completion)') +
ggtitle(paste("  Attentional Facilitation by Probe Location (N=",N,")",sep="")) +
theme(legend.position = "right")
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/retinotopic-remapping/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="data_output.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("TRIAL_TYPE","PROBE_DELAY", "RULES"))
l = dim(data.summary)[1]
c = rep(410,l)
data.summary$wRT = c - data.summary$wRT
########## compute R2s
golomb_S = c(8, 21, 21)
golomb_I = c(8, 5, 13)
golomb_R = c(24, 15, 9.5)
epic_S = c(9.804074, 46.113835, 59.938499)
epic_I = c(33.635838, 31.693449, 378.0808)
epic_R = c(78.352804, 59.209275, 43.710729)
R_S = cor(golomb_S,epic_S)
R_I = cor(golomb_I,epic_I)
R_R = cor(golomb_R,epic_R)
Rsq_S = R_S*R_S
Rsq_I = R_I*R_I
Rsq_R = R_R*R_R
rlbl_S <- paste("R^2 == ", round(Rsq_S,4))
rlbl_I <- paste("R^2 == ", round(Rsq_I,4))
rlbl_R <- paste("R^2 == ", round(Rsq_R,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se),group=TRIAL_TYPE, colour=TRIAL_TYPE, y=wRT, x=PROBE_DELAY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 3, y = 80, label = rlbl_S, parse=TRUE, colour="blue") +
annotate("text", x = 3, y = 77, label = rlbl_I, parse=TRUE, colour="darkred") +
annotate("text", x = 3, y = 74, label = rlbl_R, parse=TRUE, colour="darkgreen") +
my.theme + labs(y=paste('RT ',modifier,'Difference (ms)',sep=""), x='Probe Delay (MS after saccade completion)') +
ggtitle(paste("  Attentional Facilitation by Probe Location (N=",N,")",sep="")) +
theme(legend.position = "right")
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/endogenous-attn-task/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="decentFit.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
#use the plyr package to summarize data
#  without error bars
#data.summary <- ddply(cbind(alldata["STIMCOLOR"],alldata["wRT"],alldata["RULES"]), c("STIMCOLOR","RULES"), summarise, meanRT=mean(wRT))
#  with error bars
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("ECCMAGNITUDE","CUEVALIDITY","RULES"))
p1 <-data.frame("7 DVA","INVALID 20%","posner",1,455,0,0,0,0)
p2 <-data.frame("7 DVA","NEUTRAL 50%","posner",1,440,0,0,0,0)
p3 <-data.frame("7 DVA","VALID 80%","posner",1,425,0,0,0,0)
names(p1)<-names(data.summary);names(p2)<-names(p1);names(p3)<-names(p1)
data.summary <- rbind(p1,p2,p3,data.summary)
posner = c(455, 440, 425)
epic = c(493.31, 436.87, 401.29)
R = cor(posner,epic)
Rsq = R*R
r2lbl <- paste("R^2 == ", round(Rsq,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se - 100),group=RULES, colour=RULES, y=wRT, x=CUEVALIDITY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 2, y = 500, label = r2lbl, parse=TRUE) +
my.theme + labs(y=paste('Mean ',modifier,'RT (ms)',sep=""), x='Position Uncertainty') +
ggtitle(paste("Posner Task: RT By Position Uncertainty (N=",N,")",sep="")) +
#facet_wrap(~ ) +
theme(legend.position = "right")
############################################ SETUP R ENVIRONMENT
#make sure we have access to some required packages
if (!require('ggplot2'))install.packages("ggplot2", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('plyr'))install.packages("plyr", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
if (!require('psych'))install.packages("psych", repos="http://cran.stat.ucla.edu/", dependencies = TRUE)
########################################### LOAD AND PROCESS DATA
#set working directory
setwd("/Users/michaelwalton/workspace/data-analysis/data-graph")
#load in some special functions
source("helper_functions.R")
#set working directory
setwd("/Users/michaelwalton/workspace/endogenous-attn-task/Rules")
#read in data file directly while creating this graph script
alldata<-read.csv(file="decentFit.csv",header=TRUE,sep=",")
#create a winsorized version of the RT variable
#alldata$wRT<-winsor(alldata$RT,.05) ; modifier = "Winsorized "
alldata$wRT<-alldata$RT; modifier = " " #easier to test DataGraph app without winsorization
#keep only accurate trials
alldata<-subset(alldata,ACCURACY=="CORRECT")
########################################### SUMMARIZE DATA
#use the plyr package to summarize data
#  without error bars
#data.summary <- ddply(cbind(alldata["STIMCOLOR"],alldata["wRT"],alldata["RULES"]), c("STIMCOLOR","RULES"), summarise, meanRT=mean(wRT))
#  with error bars
data.summary <- summarySEwithin(data=alldata, measurevar="wRT", withinvars=c("ECCMAGNITUDE","CUEVALIDITY","RULES"))
p1 <-data.frame("7 DVA","INVALID 20%","posner",1,455,0,0,0,0)
p2 <-data.frame("7 DVA","NEUTRAL 50%","posner",1,440,0,0,0,0)
p3 <-data.frame("7 DVA","VALID 80%","posner",1,425,0,0,0,0)
names(p1)<-names(data.summary);names(p2)<-names(p1);names(p3)<-names(p1)
data.summary <- rbind(p1,p2,p3,data.summary)
posner = c(455, 440, 425)
epic = c(493.31, 436.87, 401.29)
R = cor(posner,epic)
Rsq = R*R
r2lbl <- paste("R^2 == ", round(Rsq,4))
########################################### CREATE GRAPH
#some settings to make a pretty graph (not really required)
my.theme<-theme_classic() + theme(axis.title.x = element_text(size=18), axis.title.y = element_text(size=18),
axis.text.x = element_text(size=16), axis.text.y = element_text(size=16),
plot.title=element_text(size=20,face="bold"),legend.title=element_text(size=14),
legend.text=element_text(size=14))
#draw graph using ggplot.
#http://docs.ggplot2.org/current/
N <- dim(alldata)[1]
ggplot(data.summary, aes(ymax = (wRT + se), ymin = (wRT - se - 100),group=RULES, colour=RULES, y=wRT, x=CUEVALIDITY)) +
geom_errorbar(aes(ymax = (wRT + se), ymin = (wRT - se)), width=0.25, position=position_dodge(.1)) +
geom_line(position=position_dodge(.1)) +
geom_point(position=position_dodge(.1)) +
annotate("text", x = 2, y = 500, label = r2lbl, parse=TRUE) +
my.theme + labs(y=paste('Mean ',modifier,'RT (ms)',sep=""), x='Position Uncertainty') +
ggtitle(paste("Posner Task: RT By Position Uncertainty (N=",N,")",sep="")) +
#facet_wrap(~ ) +
theme(legend.position = "right")
